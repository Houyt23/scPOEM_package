% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/align_embedding.R
\name{align_embedding}
\alias{align_embedding}
\title{align_embedding}
\usage{
align_embedding(
  gene_data1,
  gene_node1,
  E1,
  gene_data2,
  gene_node2,
  E2,
  dirpath,
  d = 100
)
}
\arguments{
\item{gene_data1}{The information for genes in state1, must have a col names 'gene_name'.}

\item{gene_node1}{Gene ids that are associated with other peaks or genes in state1.}

\item{E1}{Embedding representations of peaks and genes in state1.}

\item{gene_data2}{The information for genes in state2, must have a col names 'gene_name'.}

\item{gene_node2}{Gene ids that are associated with other peaks or genes in state2.}

\item{E2}{Embedding representations of peaks and genes in state2.}

\item{dirpath}{The folder path to read or write file}

\item{d}{The dimension of latent space.}
}
\value{
a list containing the following \describe{
\item{\code{manifoldAlignment}}{Embedding representations of genes in two conditions}
\item{\code{diffRegulation}}{A list of differential regulation informmation for each gene}
}
}
\description{
Manifold alignment in scTenifoldNet is applied to genes across two conditions using eNN constructed from separate gene representations.
}
\examples{
\dontrun{
library(scPOEM)
library(Matrix)
dirpath <- "./example_data"
# Download compare mode example data
data(input_compare)
data_S1 <- input_compare$S1
data_S2 <- input_compare$S2
gg_net1 <- GGN(data_S1$Y, file.path(dirpath, "compare/S1"))
pp_net1 <- PPN(data_S1$X, data_S1$peak_data, data_S1$cell_data,
               data_S1$genome, file.path(dirpath, "compare/S1"))
net_Lasso1 <- PGN_Lasso(data_S1$X, data_S1$Y,
                        data_S1$gene_data, data_S1$neibor_peak,
                        file.path(dirpath, "compare/S1"))
net_RF1 <- PGN_RF(data_S1$X, data_S1$Y, data_S1$gene_data,
                  data_S1$neibor_peak, file.path(dirpath, "compare/S1"))
net_XGB1 <- PGN_XGBoost(data_S1$X, data_S1$Y,
                        data_S1$gene_data, data_S1$neibor_peak,
                        file.path(dirpath, "compare/S1"))
E_result_S1 <- pg_embedding(gg_net1, pp_net1, net_lasso1, net_RF1,
                            net_XGB1, file.path(dirpath, "compare/S1"))

gg_net2 <- GGN(data_S2$Y, file.path(dirpath, "compare/S2"))
pp_net2 <- PPN(data_S2$X, data_S2$peak_data,
               data_S2$cell_data, data_S2$genome,
               file.path(dirpath, "compare/S2"))
net_Lasso2 <- PGN_Lasso(data_S2$X, data_S2$Y,
                        data_S2$gene_data, data_S2$neibor_peak,
                        file.path(dirpath, "compare/S2"))
net_RF2 <- PGN_RF(data_S2$X, data_S2$Y, data_S2$gene_data,
                  data_S2$neibor_peak, file.path(dirpath, "compare/S2"))
net_XGB2 <- PGN_XGBoost(data_S2$X, data_S2$Y,
                        data_S2$gene_data, data_S2$neibor_peak,
                        file.path(dirpath, "compare/S2"))
E_result_S2 <- pg_embedding(gg_net2, pp_net2, net_lasso2, net_RF2,
                            net_XGB2, file.path(dirpath, "compare/S2"))

compare_result <- align_embedding(gene_data1,
                                  E_result_S1$gene_node,
                                  E_result_S1$E,
                                  gene_data2,
                                  E_result_S2$gene_node,
                                  E_result_S2$E,
                                  file.path(dirpath, "compare/compare"))
}

}
